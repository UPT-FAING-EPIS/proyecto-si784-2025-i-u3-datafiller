<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="SqlAnalyzerController.php" path="\controllers">
    <totals>
      <lines total="658" comments="68" code="590" executable="371" executed="249" percent="67.12"/>
      <methods count="13" tested="7" percent="53.85"/>
      <functions count="1" tested="0" percent="0.00"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Controllers\SqlAnalyzerController" start="25" executable="331" executed="245" crap="420.87">
      <namespace name="App\Controllers"/>
      <method name="__construct" signature="__construct()" start="29" end="33" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="analizarEstructura" signature="analizarEstructura($script, $dbType, $usuario_id)" start="37" end="87" crap="5.26" executable="32" executed="25" coverage="78.125"/>
      <method name="extraerTablasConParser" signature="extraerTablasConParser($script)" start="90" end="94" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="analizarTablaConParser" signature="analizarTablaConParser($statement)" start="97" end="153" crap="272" executable="34" executed="0" coverage="0"/>
      <method name="procesarColumnaParser" signature="procesarColumnaParser($field)" start="156" end="274" crap="31.29" executable="72" executed="59" coverage="81.944444444444"/>
      <method name="construirModificadores" signature="construirModificadores($es_primary_key, $es_auto_increment, $es_not_null, $default_value)" start="277" end="286" crap="5" executable="6" executed="6" coverage="100"/>
      <method name="limpiarScript" signature="limpiarScript($script)" start="289" end="299" crap="1" executable="5" executed="5" coverage="100"/>
      <method name="extraerTablasFallback" signature="extraerTablasFallback($script)" start="302" end="324" crap="3" executable="13" executed="13" coverage="100"/>
      <method name="extraerColumnasFallbackMejorado" signature="extraerColumnasFallbackMejorado($definicion)" start="327" end="441" crap="41.09" executable="72" executed="45" coverage="62.5"/>
      <method name="dividirPorComasSeguras" signature="dividirPorComasSeguras($texto)" start="444" end="503" crap="15" executable="36" executed="36" coverage="100"/>
      <method name="determinarTipoGeneracion" signature="determinarTipoGeneracion($nombre, $tipo, $modificadores, $enum_values, $es_auto_increment)" start="505" end="575" crap="32.35" executable="43" executed="40" coverage="93.023255813953"/>
      <method name="verificarLimitesUsuario" signature="verificarLimitesUsuario($usuario_id)" start="577" end="580" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="registrarConsulta" signature="registrarConsulta($usuario_id, $tipo, $cantidad_tablas)" start="582" end="598" crap="2.02" executable="11" executed="9" coverage="81.818181818182"/>
    </class>
    <function name="App\Controllers\debug_log" signature="debug_log($message)" start="20" crap="2" executable="2" executed="0" coverage="0"/>
    <coverage>
      <line nr="5">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
      </line>
      <line nr="15">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
      </line>
      <line nr="16">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
      </line>
      <line nr="30">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserReturnsNullIfNoType"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testConstruirModificadores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimpiarScript"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="31">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserReturnsNullIfNoType"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testConstruirModificadores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimpiarScript"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="32">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserReturnsNullIfNoType"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testConstruirModificadores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimpiarScript"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="40">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="42">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
      </line>
      <line nr="49">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="51">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="53">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
      </line>
      <line nr="60">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="61">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="62">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="66">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="69">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="70">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="73">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="74">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="75">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="76">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="92">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="93">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="158">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserReturnsNullIfNoType"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="159">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserReturnsNullIfNoType"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="161">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserReturnsNullIfNoType"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="164">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="165">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="166">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="169">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="170">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="174">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="175">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="178">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="179">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="180">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="181">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="182">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="185">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="187">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
      </line>
      <line nr="194">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
      </line>
      <line nr="197">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
      </line>
      <line nr="198">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
      </line>
      <line nr="199">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
      </line>
      <line nr="203">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="204">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="206">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="212">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="213">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="214">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="217">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="218">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="219">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="220">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="225">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="227">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="228">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="230">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="232">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="233">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="240">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="241">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="243">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="244">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="246">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="247">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="254">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="255">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="256">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="257">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="258">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="259">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="260">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="261">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="262">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="266">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="267">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="278">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testConstruirModificadores"/>
      </line>
      <line nr="280">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testConstruirModificadores"/>
      </line>
      <line nr="281">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testConstruirModificadores"/>
      </line>
      <line nr="282">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testConstruirModificadores"/>
      </line>
      <line nr="283">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testConstruirModificadores"/>
      </line>
      <line nr="285">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testConstruirModificadores"/>
      </line>
      <line nr="291">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimpiarScript"/>
      </line>
      <line nr="292">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimpiarScript"/>
      </line>
      <line nr="295">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimpiarScript"/>
      </line>
      <line nr="296">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimpiarScript"/>
      </line>
      <line nr="298">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimpiarScript"/>
      </line>
      <line nr="303">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="306">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="308">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="309">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="310">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="311">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="313">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="314">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="315">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="316">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="319">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="323">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="328">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="329">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="332">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="343">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="353">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="356">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="359">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="360">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="361">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="364">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="367">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="372">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="373">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="374">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="375">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="376">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="378">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="381">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="382">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="389">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="390">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="391">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="398">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="399">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="401">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="405">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="406">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="407">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="408">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="409">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="410">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="411">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="412">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="413">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="414">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="418">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="419">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="422">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="427">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="439">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="440">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="446">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="447">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="448">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="449">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="450">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="452">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="453">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="456">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="457">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="458">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="459">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="460">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="461">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="465">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="466">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="467">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="468">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="469">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="470">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="472">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="473">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="474">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="476">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="477">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="481">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="485">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="486">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="487">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="491">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="492">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="493">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="494">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="495">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="499">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="500">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="502">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDividirPorComasSegurasConCasosComplejos"/>
      </line>
      <line nr="506">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="509">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="510">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
      </line>
      <line nr="514">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="515">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
      </line>
      <line nr="516">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
      </line>
      <line nr="520">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="521">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
      </line>
      <line nr="524">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="525">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
      </line>
      <line nr="528">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="529">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
      </line>
      <line nr="532">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="533">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
      </line>
      <line nr="536">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="537">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
      </line>
      <line nr="540">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="541">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
      </line>
      <line nr="544">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="545">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
      </line>
      <line nr="550">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="551">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="552">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="553">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionPorNombre"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="554">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="555">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="556">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="557">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="558">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="559">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="560">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="561">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="562">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="563">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="564">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="565">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="566">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="567">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="568">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="569">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testDeterminarTipoGeneracionSwitches"/>
      </line>
      <line nr="578">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="579">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="584">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="586">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="587">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="588">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="589">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="590">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="591">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="593">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="602">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
      </line>
      <line nr="41">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
      </line>
      <line nr="43">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
      </line>
      <line nr="44">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
      </line>
      <line nr="45">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testLimiteConsultasAgotadoDevuelveError"/>
      </line>
      <line nr="52">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
      </line>
      <line nr="54">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
      </line>
      <line nr="55">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
      </line>
      <line nr="56">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testSinTablasEnScriptDevuelveSinTablas"/>
      </line>
      <line nr="72">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="77">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="253">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="263">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="264">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="265">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="268">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserEnumSinValores"/>
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testProcesarColumnaParserConOpcionesVariadas"/>
      </line>
      <line nr="317">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="415">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="416">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="417">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="420">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
      <line nr="585">
        <covered by="App\Tests\Unit\SqlAnalyzerControllerTest::testEstructuraValidaDevuelveTablas"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Controllers</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_COMMENT">// &#x2705; AUTOLOAD PRIMERO</token>
      </line>
      <line no="5">
        <token name="T_REQUIRE_ONCE">require_once</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIR">__DIR__</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/../vendor/autoload.php'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Config\Database</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Models\Usuario</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Controllers\FileProcessorController</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">PhpMyAdmin\SqlParser\Parser</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">PhpMyAdmin\SqlParser\Components\CreateDefinition</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">PhpMyAdmin\SqlParser\Statements\CreateStatement</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_COMMENT">// &#x2705; CREAR DIRECTORIO DE LOGS</token>
      </line>
      <line no="15">
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DIR">__DIR__</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/../logs'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">mkdir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DIR">__DIR__</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/../logs'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0777</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_COMMENT">// &#x2705; FUNCI&#xD3;N HELPER PARA DEBUG</token>
      </line>
      <line no="20">
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">debug_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_VARIABLE">$timestamp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">date</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Y-m-d H:i:s'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">file_put_contents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DIR">__DIR__</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/../logs/debug.log'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">[</token>
        <token name="T_VARIABLE">$timestamp</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">] </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">\n</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FILE_APPEND</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SqlAnalyzerController</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$db</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$usuarioModel</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$database</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Database</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">db</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$database</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConnection</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">usuarioModel</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Usuario</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">db</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34"/>
      <line no="35"/>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">analizarEstructura</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dbType</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$usuario_id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Verificar l&#xED;mites de consultas</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verificarLimitesUsuario</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$usuario_id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exito'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mensaje'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Has agotado tus consultas diarias. Actualiza a Premium para consultas ilimitadas.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tipo'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'limite_consultas'</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// &#x2705; USAR LIBRER&#xCD;A SQL PARSER</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$tablas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">extraerTablasConParser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tablas</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exito'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mensaje'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'No se encontraron declaraciones CREATE TABLE v&#xE1;lidas en el script.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tipo'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sin_tablas'</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Analizar cada tabla</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$estructura_analizada</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tablas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tabla</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$estructura_analizada</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tabla</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// Ya viene analizada del parser</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Registrar consulta en auditor&#xED;a</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">registrarConsulta</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$usuario_id</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'analisis_estructura'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tablas</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Guardar en sesi&#xF3;n para siguiente paso</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'estructura_analizada'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$estructura_analizada</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_type'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dbType</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exito'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mensaje'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Estructura analizada correctamente'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tablas'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$estructura_analizada</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'total_tablas'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tablas</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Exception</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Error analizando estructura: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exito'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mensaje'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Error interno analizando la estructura. Verifique el formato del script.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tipo'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error_interno'</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// &#x2705; NUEVO M&#xC9;TODO CON LIBRER&#xCD;A SQL PARSER</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">extraerTablasConParser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; FORZAR USO DEL FALLBACK (m&#xE1;s confiable)</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Usando m&#xE9;todo fallback para parsing SQL"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">extraerTablasFallback</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// &#x2705; ANALIZAR TABLA CON PARSER</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">analizarTablaConParser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$nombre_tabla</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">table</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$columnas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$foreign_keys</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// &#x2705; CORREGIDO: Acceso directo a fields</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">fields</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">fields</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">fields</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\PhpMyAdmin\SqlParser\Components\CreateDefinition</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">                        </token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_COMMENT">// &#x2705; DETECTAR FOREIGN KEY</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">                           </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">key</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">type</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">                           </token>
        <token name="T_STRING">strtoupper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">key</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">type</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'FOREIGN KEY'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">                            </token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$foreign_keys</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'column'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_table'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">references</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">table</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">references</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">table</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_column'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">references</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">columns</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">references</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">columns</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">                        </token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_COMMENT">// &#x2705; PROCESAR COLUMNA NORMAL</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">procesarColumnaParser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$columnas</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// &#x2705; APLICAR FOREIGN KEYS</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$foreign_keys</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fk</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$columnas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG">&amp;</token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nombre'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fk</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'column'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'es_foreign_key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_table'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fk</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_table'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_column'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fk</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_column'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tipo_generacion'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'foreign_key'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nombre'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre_tabla</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'columnas'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$columnas</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'script_original'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">build</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Exception</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Error analizando tabla: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// &#x2705; PROCESAR COLUMNA CON PARSER</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">procesarColumnaParser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$tipo_info</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">type</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$tipo_info</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// &#x2705; DEBUG TEMPORAL</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">PROCESANDO COLUMNA: </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"TIPO INFO: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">print_r</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tipo_info</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"TIPO NAME: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">print_r</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tipo_info</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// &#x2705; CORREGIR: Manejar que name puede ser array</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tipo_info</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtoupper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tipo_info</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'VARCHAR'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"TIPO ES ARRAY: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtoupper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tipo_info</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"TIPO ES STRING: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$parametros</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tipo_info</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">parameters</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tipo_info</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">parameters</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$longitud</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$decimales</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$default_value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// &#x2705; PROCESAR PAR&#xC1;METROS SEG&#xDA;N TIPO</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ENUM'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// Para ENUM, extraer valores de los par&#xE1;metros</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$parametros</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$valor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"'\""</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$valor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$valor</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">                </token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">ENUM ENCONTRADO en </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">: </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">print_r</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">                </token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// Si no se encontraron valores, usar defaults</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'default1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'default2'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">NO SE ENCONTR&#xD3; ENUM en </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">, usando defaults</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// Para otros tipos, longitud y decimales</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$parametros</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$longitud</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">intval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$parametros</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$parametros</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$decimales</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">intval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$parametros</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// &#x2705; EXTRAER MODIFICADORES DE FORMA M&#xC1;S SEGURA</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$es_primary_key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$es_auto_increment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$es_not_null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Revisar si hay key definida</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$key_type</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtoupper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">key</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">type</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key_type</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'PRIMARY KEY'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key_type</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'PRIMARY'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$es_primary_key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Revisar opciones</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// La librer&#xED;a v5 maneja options diferente</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_object</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$field</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option_key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_COMMENT">// &#x2705; CORREGIR L&#xCD;NEA 236: Manejar que option_key puede ser array</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option_key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$option_name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtoupper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option_key</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option_key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$option_name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtoupper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option_key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$option_name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtoupper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// Skip si no podemos procesar</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">                        </token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option_name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'AUTO_INCREMENT'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$es_auto_increment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option_name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'NOT NULL'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$es_not_null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option_name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'DEFAULT'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="247">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$default_value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option_value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"'\""</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="249">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="250">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="252">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nombre'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tipo_sql'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'longitud'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$longitud</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'decimales'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$decimales</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'enum_values'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'default_value'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default_value</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'es_primary_key'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$es_primary_key</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="261">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'es_auto_increment'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$es_auto_increment</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'es_not_null'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$es_not_null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="263">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'es_foreign_key'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// Se establecer&#xE1; despu&#xE9;s</token>
      </line>
      <line no="264">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_table'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="265">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_column'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="266">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tipo_generacion'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">determinarTipoGeneracion</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$es_auto_increment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'modificadores'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">construirModificadores</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$es_primary_key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$es_auto_increment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$es_not_null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="270">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Exception</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="271">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Error procesando columna: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="273">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="274">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="275">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="276">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// &#x2705; CONSTRUIR MODIFICADORES PARA COMPATIBILIDAD</token>
      </line>
      <line no="277">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">construirModificadores</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$es_primary_key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$es_auto_increment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$es_not_null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="278">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="279">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="280">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$es_not_null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'NOT NULL'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="281">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$es_auto_increment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'AUTO_INCREMENT'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="282">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$es_primary_key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'PRIMARY KEY'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="283">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$default_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">DEFAULT '</token>
        <token name="T_VARIABLE">$default_value</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">'</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="284">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="285">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">implode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="286">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="287">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="288">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// &#x2705; LIMPIAR SCRIPT</token>
      </line>
      <line no="289">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">limpiarScript</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="290">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Remover comentarios</token>
      </line>
      <line no="291">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">preg_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/--.*$/m'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="292">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">preg_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/\/\*.*?\*\//s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="293">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="294">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Remover comandos no necesarios</token>
      </line>
      <line no="295">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">preg_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^\s*SET\s+.*?;\s*$/m'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="296">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">preg_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^\s*USE\s+.*?;\s*$/m'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="297">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="298">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="299">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="300">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="301">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// &#x2705; FALLBACK AL M&#xC9;TODO ANTERIOR</token>
      </line>
      <line no="302">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">extraerTablasFallback</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="303">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tablas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="304">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="305">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; PATR&#xD3;N MEJORADO PARA DETECTAR CREATE TABLE</token>
      </line>
      <line no="306">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$patron</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/CREATE\s+TABLE\s+(?:IF\s+NOT\s+EXISTS\s+)?(?:`?)(\w+)(?:`?)\s*\(\s*(.*?)\s*\)\s*(?:ENGINE.*?)?(?:;|$)/is'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="307">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="308">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match_all</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$patron</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$matches</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PREG_SET_ORDER</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$matches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="310">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$nombre_tabla</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'`'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="311">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$definicion_columnas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="312">
        <token name="T_WHITESPACE">                </token>
      </line>
      <line no="313">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$tabla</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="314">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nombre'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre_tabla</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="315">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'columnas'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">extraerColumnasFallbackMejorado</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$definicion_columnas</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="316">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'script_original'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="317">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="318">
        <token name="T_WHITESPACE">                </token>
      </line>
      <line no="319">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$tablas</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tabla</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="320">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="321">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="322">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="323">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tablas</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="324">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="326">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// &#x2705; M&#xC9;TODO FALLBACK MEJORADO PARA EXTRAER COLUMNAS</token>
      </line>
      <line no="327">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">extraerColumnasFallbackMejorado</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$definicion</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="328">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$columnas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="329">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$foreign_keys</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="330">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="331">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; DETECTAR FOREIGN KEYS PRIMERO</token>
      </line>
      <line no="332">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match_all</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/CONSTRAINT\s+`?\w+`?\s+FOREIGN\s+KEY\s+\(`?(\w+)`?\)\s+REFERENCES\s+`?(\w+)`?\s+\(`?(\w+)`?\)/i'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$definicion</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fk_matches</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PREG_SET_ORDER</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="333">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fk_matches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="334">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$foreign_keys</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="335">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'column'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="336">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_table'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="337">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_column'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">3</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="338">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="339">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="340">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="341">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="342">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; PATR&#xD3;N GEN&#xC9;RICO PARA FOREIGN KEY SIN CONSTRAINT</token>
      </line>
      <line no="343">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match_all</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/FOREIGN\s+KEY\s+\(`?(\w+)`?\)\s+REFERENCES\s+`?(\w+)`?\s+\(`?(\w+)`?\)/i'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$definicion</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fk2_matches</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PREG_SET_ORDER</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="344">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fk2_matches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="345">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$foreign_keys</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="346">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'column'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="347">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_table'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="348">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_column'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">3</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="349">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="350">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="351">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="352">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="353">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"FOREIGN KEYS DETECTADAS: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">print_r</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$foreign_keys</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="354">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="355">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; DIVIDIR POR COMAS INTELIGENTEMENTE</token>
      </line>
      <line no="356">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lineas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dividirPorComasSeguras</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$definicion</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="357">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="358">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; LIMPIAR Y PROCESAR CADA L&#xCD;NEA</token>
      </line>
      <line no="359">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$columnas_procesadas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="360">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lineas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$linea</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="361">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$linea</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$linea</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="362">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="363">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Ignorar l&#xED;neas vac&#xED;as</token>
      </line>
      <line no="364">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$linea</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="365">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="366">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Ignorar PRIMARY KEY, FOREIGN KEY, CONSTRAINT, etc.</token>
      </line>
      <line no="367">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^(PRIMARY\s+KEY|FOREIGN\s+KEY|CONSTRAINT|KEY\s+`|INDEX|ENGINE|CHARSET|COLLATE)/i'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$linea</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="368">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="369">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="370">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="371">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Buscar patr&#xF3;n de columna: `nombre` tipo(params) modificadores</token>
      </line>
      <line no="372">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^`?(\w+)`?\s+(\w+)(?:\(([^)]*)\))?\s*(.*)?$/i'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$linea</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$matches</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="373">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$matches</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="374">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtoupper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$matches</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="375">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$parametros</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$matches</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">3</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="376">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtoupper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$matches</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">4</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="377">
        <token name="T_WHITESPACE">                </token>
      </line>
      <line no="378">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">COLUMNA DETECTADA: </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> | TIPO: </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> | PARAMS: </token>
        <token name="T_VARIABLE">$parametros</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> | MODS: </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="379">
        <token name="T_WHITESPACE">                </token>
      </line>
      <line no="380">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// Procesar ENUM</token>
      </line>
      <line no="381">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="382">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ENUM'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="383">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match_all</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"/'([^']+)'/"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$parametros</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$enum_matches</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="384">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$enum_matches</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="385">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="386">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="387">
        <token name="T_WHITESPACE">                </token>
      </line>
      <line no="388">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// Extraer longitud</token>
      </line>
      <line no="389">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$longitud</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="390">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$decimales</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="391">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$parametros</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ENUM'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="392">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">explode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">','</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$parametros</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="393">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$longitud</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">intval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="394">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$decimales</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">intval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="395">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="396">
        <token name="T_WHITESPACE">                </token>
      </line>
      <line no="397">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// Extraer default</token>
      </line>
      <line no="398">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$default_value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="399">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"/DEFAULT\s+'([^']+)'/i"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default_match</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="400">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$default_value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default_match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="401">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/DEFAULT\s+(\w+)/i'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default_match</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="402">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$default_value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default_match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="403">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="404">
        <token name="T_WHITESPACE">                </token>
      </line>
      <line no="405">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="406">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nombre'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="407">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tipo_sql'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="408">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'longitud'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$longitud</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="409">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'decimales'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$decimales</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="410">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'enum_values'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="411">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'default_value'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default_value</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="412">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'es_primary_key'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'PRIMARY KEY'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="413">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'es_auto_increment'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'AUTO_INCREMENT'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="414">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'es_not_null'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'NOT NULL'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="415">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'es_foreign_key'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="416">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_table'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="417">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_column'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="418">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tipo_generacion'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">determinarTipoGeneracion</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tipo_base</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'AUTO_INCREMENT'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="419">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'modificadores'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modificadores</token>
      </line>
      <line no="420">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="421">
        <token name="T_WHITESPACE">                </token>
      </line>
      <line no="422">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$columnas_procesadas</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="423">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="424">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="425">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="426">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; APLICAR FOREIGN KEYS</token>
      </line>
      <line no="427">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$foreign_keys</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fk</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="428">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$columnas_procesadas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG">&amp;</token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="429">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nombre'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fk</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'column'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="430">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'es_foreign_key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="431">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_table'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fk</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_table'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="432">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_column'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fk</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'references_column'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="433">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$columna</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tipo_generacion'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'foreign_key'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="434">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="435">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="436">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="437">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="438">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="439">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"TOTAL COLUMNAS DETECTADAS: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$columnas_procesadas</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="440">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$columnas_procesadas</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="441">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="442">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="443">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// &#x2705; M&#xC9;TODO PARA DIVIDIR POR COMAS INTELIGENTEMENTE</token>
      </line>
      <line no="444">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">dividirPorComasSeguras</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$texto</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="445">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; M&#xC9;TODO SIMPLE Y DIRECTO</token>
      </line>
      <line no="446">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$resultado</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="447">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$actual</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="448">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$nivel_parentesis</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="449">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$en_comillas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="450">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$caracter_comilla</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="451">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="452">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$texto</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="453">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$texto</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="454">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="455">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Detectar inicio/fin de comillas</token>
      </line>
      <line no="456">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"'"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'"'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$en_comillas</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="457">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$en_comillas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="458">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$caracter_comilla</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="459">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$caracter_comilla</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$en_comillas</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="460">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$en_comillas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="461">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$caracter_comilla</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="462">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="463">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="464">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Solo procesar separadores si no estamos en comillas</token>
      </line>
      <line no="465">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$en_comillas</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="466">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'('</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="467">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$nivel_parentesis</token>
        <token name="T_INC">++</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="468">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">')'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="469">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$nivel_parentesis</token>
        <token name="T_DEC">--</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="470">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">','</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nivel_parentesis</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="471">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_COMMENT">// Encontramos separador v&#xE1;lido</token>
      </line>
      <line no="472">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$linea_limpia</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$actual</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="473">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$linea_limpia</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="474">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$resultado</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$linea_limpia</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="475">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="476">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$actual</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="477">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="478">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="479">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="480">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="481">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$actual</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="482">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="483">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="484">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Agregar &#xFA;ltimo fragmento</token>
      </line>
      <line no="485">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$linea_limpia</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$actual</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="486">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$linea_limpia</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="487">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$resultado</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$linea_limpia</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="488">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="489">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="490">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; DEBUG: Ver todas las l&#xED;neas detectadas  </token>
      </line>
      <line no="491">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"=== DIVISI&#xD3;N POR COMAS ==="</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="492">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"TEXTO COMPLETO: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$texto</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// &#x2705; VER TODO EL TEXTO</token>
      </line>
      <line no="493">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"L&#xCD;NEAS ENCONTRADAS: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$resultado</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="494">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$resultado</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$linea</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="495">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">L&#xCD;NEA </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">: [</token>
        <token name="T_VARIABLE">$linea</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">]</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// &#x2705; CON CORCHETES PARA VER ESPACIOS</token>
      </line>
      <line no="496">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="497">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="498">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; TAMBI&#xC9;N MOSTRAR CARACTERES ESPECIALES</token>
      </line>
      <line no="499">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"TEXTO EN HEX: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bin2hex</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$texto</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">200</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="500">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"=== FIN DIVISI&#xD3;N ==="</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="501">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="502">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resultado</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="503">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="504">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="505">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">determinarTipoGeneracion</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tipo</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modificadores</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$es_auto_increment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="506">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtolower</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="507">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="508">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; AUTO INCREMENT PRIMERO</token>
      </line>
      <line no="509">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$es_auto_increment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="510">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'auto_increment'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="511">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="512">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="513">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &#x2705; ENUM DEBE IR ANTES QUE CUALQUIER OTRA COSA</token>
      </line>
      <line no="514">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tipo</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ENUM'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="515">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">DETECTANDO ENUM PARA </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> - Valores: </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">print_r</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$enum_values</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="516">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'enum_values'</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// &#x2705; RETORNAR ENUM_VALUES</token>
      </line>
      <line no="517">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="518">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="519">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Por nombre de campo (resto igual)</token>
      </line>
      <line no="520">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user_id'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'usuario_id'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'client_id'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="521">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'numero_entero'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="522">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="523">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="524">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nombre'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="525">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nombre_persona'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="526">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="527">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="528">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'correo'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="529">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="530">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="531">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="532">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'telefono'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'phone'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="533">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'telefono'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="534">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="535">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="536">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'direccion'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'address'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="537">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'direccion'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="538">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="539">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="540">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'fecha'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'date'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="541">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'fecha'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="542">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="543">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="544">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'precio'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre_lower</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'price'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="545">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'numero_decimal'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="546">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="547">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="548">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Por tipo SQL</token>
      </line>
      <line no="549">
        <token name="T_WHITESPACE">        </token>
        <token name="T_SWITCH">switch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tipo</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="550">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'VARCHAR'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="551">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'CHAR'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="552">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'TEXT'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="553">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'texto_aleatorio'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="554">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'INT'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="555">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'INTEGER'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="556">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'BIGINT'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="557">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'numero_entero'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="558">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'DECIMAL'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="559">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'FLOAT'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="560">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'DOUBLE'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="561">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'numero_decimal'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="562">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'DATE'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="563">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'fecha'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="564">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'DATETIME'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="565">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'TIMESTAMP'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="566">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'fecha_hora'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="567">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'BOOLEAN'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="568">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'BOOL'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="569">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'booleano'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="570">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ENUM'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="571">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'enum_values'</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// &#x2705; REDUNDANTE PERO SEGURO</token>
      </line>
      <line no="572">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DEFAULT">default</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="573">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'texto_aleatorio'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="574">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="575">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="576">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="577">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">verificarLimitesUsuario</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$usuario_id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="578">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$consultas_restantes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">usuarioModel</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">obtenerConsultasRestantes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$usuario_id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="579">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$consultas_restantes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="580">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="581">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="582">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">registrarConsulta</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$usuario_id</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tipo</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cantidad_tablas</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="583">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="584">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$query</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"INSERT INTO tbauditoria_consultas (usuario_id, tipo_consulta, cantidad_registros, fecha_consulta, ip_usuario) </token>
      </line>
      <line no="585">
        <token name="T_CONSTANT_ENCAPSED_STRING">                      VALUES (:usuario_id, :tipo, :cantidad, NOW(), :ip)"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="586">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$stmt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">db</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">prepare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$query</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="587">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$stmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">bindParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">':usuario_id'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$usuario_id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="588">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$stmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">bindParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">':tipo'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tipo</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="589">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$stmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">bindParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">':cantidad'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cantidad_tablas</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="590">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$stmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">bindParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">':ip'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_SERVER</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'REMOTE_ADDR'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="591">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$stmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="592">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="593">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">usuarioModel</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">incrementarConsultas</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$usuario_id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="594">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="595">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Exception</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="596">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">error_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Error registrando consulta: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="597">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="598">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="599">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="600"/>
      <line no="601">
        <token name="T_COMMENT">// &#x2705; MOVER EL C&#xD3;DIGO POST AQU&#xCD; - DESPU&#xC9;S DE LA CLASE</token>
      </line>
      <line no="602">
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$_SERVER</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'REQUEST_METHOD'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'POST'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="603">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// Iniciar sesi&#xF3;n</token>
      </line>
      <line no="604">
        <token name="T_WHITESPACE">    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">session_status</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_SESSION_ACTIVE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="605">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">session_start</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="606">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="607">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="608">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">debug_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"=== INICIO PROCESAMIENTO POST ==="</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="609">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">debug_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Session ID: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">session_id</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="610">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">debug_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Usuario en sesi&#xF3;n: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'usuario'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'S&#xCD; - ID: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'usuario'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'NO'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="611">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="612">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// Verificar sesi&#xF3;n</token>
      </line>
      <line no="613">
        <token name="T_WHITESPACE">    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'usuario'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="614">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">debug_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"&#x274C; Usuario no autenticado, redirigiendo"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="615">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Debe iniciar sesi&#xF3;n para usar esta funcionalidad.'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="616">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">header</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Location: ../views/Auth/login.php'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="617">
        <token name="T_WHITESPACE">        </token>
        <token name="T_EXIT">exit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="618">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="619">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="620">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">debug_log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"&#x2705; Usuario autenticado: "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'usuario'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nombre'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="621">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="622">
        <token name="T_WHITESPACE">    </token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_POST</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'script'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="623">
        <token name="T_WHITESPACE">    </token>
        <token name="T_VARIABLE">$dbType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_POST</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'dbType'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sql'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="624">
        <token name="T_WHITESPACE">    </token>
        <token name="T_VARIABLE">$usuario_id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'usuario'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="625">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="626">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// Si se subi&#xF3; un archivo, procesar primero</token>
      </line>
      <line no="627">
        <token name="T_WHITESPACE">    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$_FILES</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'database_file'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_FILES</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'database_file'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UPLOAD_ERR_OK</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="628">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fileProcessor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FileProcessorController</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="629">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fileResult</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fileProcessor</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">processFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="630">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="631">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fileResult</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'success'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="632">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fileResult</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'content'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="633">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="634">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Error procesando archivo: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fileResult</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="635">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">header</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Location: ../views/User/generardata.php'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="636">
        <token name="T_WHITESPACE">            </token>
        <token name="T_EXIT">exit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="637">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="638">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="639">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="640">
        <token name="T_WHITESPACE">    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="641">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Debe proporcionar un script SQL o subir un archivo v&#xE1;lido.'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="642">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">header</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Location: ../views/User/generardata.php'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="643">
        <token name="T_WHITESPACE">        </token>
        <token name="T_EXIT">exit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="644">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="645">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="646">
        <token name="T_WHITESPACE">    </token>
        <token name="T_VARIABLE">$analyzer</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SqlAnalyzerController</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="647">
        <token name="T_WHITESPACE">    </token>
        <token name="T_VARIABLE">$resultado</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$analyzer</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">analizarEstructura</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$script</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dbType</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$usuario_id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="648">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="649">
        <token name="T_WHITESPACE">    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$resultado</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exito'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="650">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exito'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resultado</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mensaje'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">. Se detectaron </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$resultado</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'total_tablas'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> tablas.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="651">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">header</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Location: ../views/User/configuracion.php'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="652">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="653">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$_SESSION</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resultado</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mensaje'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="654">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">header</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Location: ../views/User/generardata.php'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="655">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="656">
        <token name="T_WHITESPACE">    </token>
        <token name="T_EXIT">exit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="657">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="658">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
    </source>
  </file>
</phpunit>
